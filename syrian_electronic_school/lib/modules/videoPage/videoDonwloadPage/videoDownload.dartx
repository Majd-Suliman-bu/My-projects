import 'package:flutter/material.dart';
import 'package:permission_handler/permission_handler.dart';
import 'package:path_provider/path_provider.dart';
import 'dart:io';
import 'package:http/http.dart' as http;
import 'package:encrypt/encrypt.dart' as enc;

class VideoDownload extends StatefulWidget {
  const VideoDownload({super.key});

  @override
  State<VideoDownload> createState() => _VideoDownloadState();
}

class _VideoDownloadState extends State<VideoDownload> {
  void requestStoragePermission() async {
    var status = await Permission.storage.request();
    if (status.isGranted) {
      print('The permission is granted');
    } else {
      print('The permission is NOT granted');
    }
  }

  Future<void> createDirectory() async {
    Directory? externalDir = await getExternalStorageDirectory();

    if (externalDir != null) {
      String newDirectoryName = "Flutter";

      Directory newDirectory =
          Directory("${externalDir.path}/$newDirectoryName");

      if (await newDirectory.exists()) {
        print('Directory exists');
      } else {
        await newDirectory.create();
        print("Directory created at: ${newDirectory.path}");
      }
    } else {
      print('Couldnt get external storage');
    }
  }

  _encryptData(plainString) {
    print("Encrypting File...");
    final encrypted =
        MyEncrypt.myEncrypter.encryptBytes(plainString, iv: MyEncrypt.myIv);
    return encrypted.bytes;
  }

  Future<void> downloadandencryptVideo(String videoUrl) async {
    var status = await Permission.storage.request();
    if (!status.isGranted) {
      print('The permission is not granted');
      return;
    }

    ///// Get the external storage directory
    Directory? externalDir = await getExternalStorageDirectory();

    if (externalDir != null) {
      ///// Create a directory inside the external storage directory
      String newDirectoryName = "Flutter";
      Directory newDirectory =
          Directory("${externalDir.path}/$newDirectoryName");

      if (!await newDirectory.exists()) {
        await newDirectory.create();
      }

      // // Extract the video's file name from the URL
      String videoFileName = videoUrl.split('/').last;

      // // Combine the directory path and file name
      String videoFilePath = "${newDirectory.path}/$videoFileName";

      //// Download the video from the URL
      print('downloading......');
      var response = await http.get(Uri.parse(videoUrl));

      if (response.statusCode == 200) {
        final encrypted = MyEncrypt.myEncrypter
            .encryptBytes(response.bodyBytes, iv: MyEncrypt.myIv);
        ///// Write the video to the directory
        File videoFile = File(videoFilePath);
        // await videoFile.writeAsBytes(response.bodyBytes);
        await videoFile.writeAsBytes(encrypted.bytes);

        print("Video downloaded and stored at: $videoFilePath");

        ///// You can perform additional actions here after encryption
      } else {
        print(
            "Failed to download the video. Status code: ${response.statusCode}");
      }
    } else {
      print('Couldnt get directory');
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(backgroundColor: Colors.green),
      body: Padding(
        padding: const EdgeInsets.all(18.0),
        child: ListView(children: [
          GestureDetector(
            child: Container(
              height: 50,
              width: 150,
              color: Colors.lightBlueAccent,
              child: Center(
                  child: Text(
                'Create directory',
                style: TextStyle(color: Colors.white),
              )),
            ),
            onTap: () {
              print('Button pressed');

              requestStoragePermission();
              createDirectory();
            },
          ),
          SizedBox(
            height: 40,
          ),
          GestureDetector(
            child: Container(
              height: 50,
              width: 150,
              color: Colors.lightBlueAccent,
              child: Center(
                  child: Text(
                'Download',
                style: TextStyle(color: Colors.white),
              )),
            ),
            onTap: () {
              print('Download button pressed');
              downloadandencryptVideo(
                  'https://assets.mixkit.co/videos/preview/mixkit-clouds-and-blue-sky-2408-large.mp4');
            },
          ),
        ]),
      ),
    );
  }
}

class MyEncrypt {
  static final myKey = enc.Key.fromUtf8('TechWithVPTechWithVPTechWithVP12');
  static final myIv = enc.IV.fromUtf8("VivekPanchal1122");
  static final myEncrypter = enc.Encrypter(enc.AES(myKey));
}
